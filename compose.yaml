services:
  eth_node:
    container_name: eth-node
    build: eth_node
    ports:
      - "8089:8545"
    healthcheck:
      test: [ "CMD", "test", "-f", "/contracts_deployed" ]
      interval: 1s
      timeout: 30s
      retries: 50
    command:
      - "--key"
      - "0x9e56ccf010fa4073274b8177ccaad46fbaf286645310d03ac9bb6afa922a7c36"
      - "--ip"
      - "0.0.0.0"
      - "--port"
      - "8545"

  fuel_node:
    build:
      context: fuel_node
      args:
        fuel_core_version: "v${FUEL_CORE_VERSION:-0.26.0}"
    container_name: fuel-node
    environment:
      - PORT=4000
      - IP=0.0.0.0
      - DATABASE_TYPE=in-memory
      - INSTANT=true
      - DEBUG=true
      # - PERIOD=6s
    ports:
      - "4000:4000"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://0.0.0.0:4000/v1/health" ]
      retries: 50
      interval: 2s
      timeout: 30s

  block_committer:
    container_name: block-committer
    depends_on:
      fuel_node:
        condition: service_healthy
      eth_node:
        condition: service_healthy
    build:
      context: .
      dockerfile: deployment/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - COMMITTER__FUEL__GRAPHQL_ENDPOINT=http://fuel_node:4000
      - COMMITTER__ETH__RPC=ws://eth_node:8545
      - COMMITTER__APP__DB__HOST=postgres
    volumes:
      - ./configurations/development/config.toml:/app/config.toml
    command: ["/app/config.toml"]
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://0.0.0.0:8080/health" ]
      retries: 50
      interval: 2s
      timeout: 30s
    

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: test

networks:
  default:
    name: e2e-network
