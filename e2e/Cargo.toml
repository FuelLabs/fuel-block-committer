[package]
name = "e2e"
authors = { workspace = true }
edition = { workspace = true }
homepage = { workspace = true }
license = { workspace = true }
repository = { workspace = true }
version = { workspace = true }
publish = { workspace = true }
rust-version = { workspace = true }
build = "build.rs"

[build-dependencies]
itertools = { workspace = true, features = ["use_alloc"] }
walkdir = { workspace = true }
reqwest = { workspace = true, features = ["default-tls"] }
zip = { workspace = true, features = ["deflate"] }
anyhow = { workspace = true, features = ["std"] }
tokio = { workspace = true, features = [
  "macros",
  "rt-multi-thread",
  "process",
  "fs",
  "io-util",
] }

[dev-dependencies]
# aws-sdk-kms = { workspace = true, features = ["rt-tokio"] }
# rustls must be used because ethers/signers enables it and it isn't compatible with 'native-tls'. Since we cannot configure it in `ethers` we must also use rustls
rusoto_kms = { workspace = true, features = ["rustls"] }
rusoto_core = { workspace = true, features = ["rustls"] }
# TODO: segfault features
hyper = { workspace = true, features = ["default"] }
hyper-rustls = { workspace = true, features = ["default"] }

testcontainers = { workspace = true, features = ["watchdog"] }
ethers = { workspace = true, features = ["aws"] }
rand = { workspace = true, features = ["std"] }
hex = { workspace = true }
portpicker = { workspace = true }
url = { workspace = true }
secp256k1 = { workspace = true, features = ["rand-std"] }
storage = { workspace = true, features = ["test-helpers"] }
reqwest = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = [
  "macros",
  "rt-multi-thread",
  "process",
  "fs",
] }
anyhow = { workspace = true, features = ["std"] }
eth = { workspace = true, features = ["test-helpers"] }
fuel = { workspace = true, features = ["test-helpers"] }
ports = { workspace = true, features = ["fuel", "l1"] }
serde_json = { workspace = true }
# TODO: segfault see about these features
serde = { workspace = true, features = ["default"] }
validator = { workspace = true, features = ["validator"] }
